// this file was generated by gomacro command: import _i "github.com/gelembjuk/articletext"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package thirdparty

import (
	articletext_ "github.com/gelembjuk/articletext"
	r "reflect"
)

// reflection: allow interpreted code to import "github.com/gelembjuk/articletext"
func init() {
	Packages["github.com/gelembjuk/articletext"] = Package{
		Name: "articletext",
		Binds: map[string]r.Value{
			"GetArticleSignature":              r.ValueOf(articletext_.GetArticleSignature),
			"GetArticleSignatureFromFile":      r.ValueOf(articletext_.GetArticleSignatureFromFile),
			"GetArticleSignatureFromUrl":       r.ValueOf(articletext_.GetArticleSignatureFromUrl),
			"GetArticleText":                   r.ValueOf(articletext_.GetArticleText),
			"GetArticleTextByPath":             r.ValueOf(articletext_.GetArticleTextByPath),
			"GetArticleTextFromFile":           r.ValueOf(articletext_.GetArticleTextFromFile),
			"GetArticleTextFromFileByPath":     r.ValueOf(articletext_.GetArticleTextFromFileByPath),
			"GetArticleTextFromUrl":            r.ValueOf(articletext_.GetArticleTextFromUrl),
			"GetArticleTextFromUrlByPath":      r.ValueOf(articletext_.GetArticleTextFromUrlByPath),
			"GetOptimalArticleSignatureByUrls": r.ValueOf(articletext_.GetOptimalArticleSignatureByUrls),
			//			"Packages":	r.ValueOf(&articletext_.Packages).Elem(),
		}, Types: map[string]r.Type{
			//			"Package":	r.TypeOf((*articletext_.Package)(nil)).Elem(),
			"TextDescription": r.TypeOf((*articletext_.TextDescription)(nil)).Elem(),
		},
	}
}
