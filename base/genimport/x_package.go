// this file was generated by gomacro command: import _i "github.com/truthtracer/gomacro/base/genimport"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package genimport

import (
	r "reflect"

	"github.com/truthtracer/gomacro/imports"
)

// reflection: allow interpreted code to import "github.com/truthtracer/gomacro/base/genimport"
func init() {
	imports.Packages["github.com/truthtracer/gomacro/base/genimport"] = imports.Package{
		Binds: map[string]r.Value{
			"DefaultImporter":   r.ValueOf(DefaultImporter),
			"GoModuleSupported": r.ValueOf(GoModuleSupported),
			"ImBuiltin":         r.ValueOf(ImBuiltin),
			"ImInception":       r.ValueOf(ImInception),
			"ImPlugin":          r.ValueOf(ImPlugin),
			"ImThirdParty":      r.ValueOf(ImThirdParty),
			"LookupPackage":     r.ValueOf(LookupPackage),
		}, Types: map[string]r.Type{
			"ImportMode":  r.TypeOf((*ImportMode)(nil)).Elem(),
			"Importer":    r.TypeOf((*Importer)(nil)).Elem(),
			"Output":      r.TypeOf((*Output)(nil)).Elem(),
			"PackageRef":  r.TypeOf((*PackageRef)(nil)).Elem(),
			"TypeVisitor": r.TypeOf((*TypeVisitor)(nil)).Elem(),
		}, Wrappers: map[string][]string{
			"Output":     []string{"Copy", "ErrorAt", "Errorf", "Fprintf", "IncLine", "IncLineBytes", "MakeRuntimeError", "Position", "Sprintf", "ToString"},
			"PackageRef": []string{"LazyInit", "Merge"},
		},
	}
}
